on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

name: Build (Tested)

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Setup the testing enviroment containers
        run: docker-compose -f "ci-docker-compose.yaml" up -d

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Test the binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --release --target=${{ matrix.target }}

      - if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
        name: Build linux binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
        name: Creating linux binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-binary
          path: target/${{ matrix.target }}/release/api*

      - if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        name: Build windows binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - if: ${{ matrix.target == 'x86_64-pc-windows-gnu' }}
        name: Creating windows binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-binary
          path: target/${{ matrix.target }}/release/api*
            
      - name: finilize testing enviroment
        run: docker-compose -f "ci-docker-compose.yaml" down